{"version":3,"sources":["utils/index.js","components/card/index.js","components/board/index.js","containers/todoBoard/index.js","App.js","reportWebVitals.js","index.js"],"names":["BOARD_TYPE","BOARD_TYPES","value","title","Card","taskTitle","boardName","onDeleteCard","pk","onSelectMoveCard","className","onClick","data-card-pk","name","onChange","filter","option","map","Board","cardsData","length","data","persistantData","JSON","parse","localStorage","getItem","TodoBoard","taskType","useRef","useState","taskName","setTaskName","setPk","searchKey","setSearchKey","DATA","setDATA","filteredData","setFilteredData","getData","useCallback","handleSearch","event","target","d","toLocaleLowerCase","includes","handleTaskName","console","log","setPersistData","setItem","stringify","handleAddTask","newTask","current","push","cardId","cardPk","dataset","moveToBoard","index","findIndex","parseInt","type","id","values","onKeyUp","placeholder","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4a4886d.chunk.js","sourcesContent":["const BOARD_TYPE = {\n  'TODO': 'TO DO',\n  'IN_PROGRESS': 'IN PROGRESS',\n  'COMPLETE': 'COMPLETED',\n}\n\nconst BOARD_TYPES = [\n  {\n    value: BOARD_TYPE.TODO,\n    title: 'Todo',\n  },\n  {\n    value: BOARD_TYPE.IN_PROGRESS,\n    title: 'Progress',\n  },\n  {\n    value: BOARD_TYPE.COMPLETE,\n    title: 'Complete',\n  }\n];\n\nexport {\n  BOARD_TYPE,\n  BOARD_TYPES,\n}","import React from 'react';\n\nimport {\n  BOARD_TYPES,\n} from 'utils';\n\nimport './styles.scss';\n\nconst Card = ({\n  taskTitle,\n  boardName,\n  onDeleteCard,\n  pk,\n  onSelectMoveCard,\n}) => {\n  return (\n    <div className=\"card\">\n      <div className=\"header\">\n        <span>\n          {taskTitle}\n        </span>\n        <button onClick={() => onDeleteCard(pk)}>\n          Delete\n        </button>\n      </div>\n      <select data-card-pk={pk} name=\"Change Status\" onChange={onSelectMoveCard}>\n        <option value=\"\">Move to board</option>\n        {\n          BOARD_TYPES.filter(\n            option => option.value !== boardName\n          ).map(\n            option => <option value={option.value}>{option.title}</option>\n          )\n        }\n      </select>\n    </div>\n  )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card';\n\nimport './styles.scss';\n\nconst Board = ({\n  title,\n  cardsData,\n  onDeleteCard,\n  onSelectMoveCard,\n}) => {\n  return (\n    <div className=\"board\">\n      <div className=\"header\">\n        <h5>{title}</h5>\n        <span>\n          ({cardsData.length})\n        </span>\n      </div>\n      <div>\n        {\n          cardsData.length ?\n          cardsData.map(\n            data => (\n              <Card\n                className=\"card\"\n                key={data.pk}\n                pk={data.pk}\n                taskTitle={data.taskTitle}\n                boardName={title}\n                onDeleteCard={onDeleteCard}\n                onSelectMoveCard={onSelectMoveCard}\n              />\n            )\n          ):\n          <h4 className=\"empty\">Empty</h4>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Board;","import React, { useCallback, useState, useRef } from 'react';\nimport Board from 'components/board';\n\nimport { \n  BOARD_TYPE,\n  BOARD_TYPES,\n} from \"utils\";\n\nimport './styles.scss';\n\nconst persistantData = JSON.parse(localStorage.getItem('todos')) || [];\n\nconst TodoBoard = () => {\n  const taskType = useRef();\n  const [taskName, setTaskName] = useState('');\n  const [pk, setPk] = useState(0);\n  const [searchKey, setSearchKey] = useState('');\n\n\n  const [DATA, setDATA] = useState(\n    persistantData\n  );\n\n  const [filteredData, setFilteredData] = useState([]);\n\n  const getData = useCallback(\n    (boardName) => {\n      if (searchKey) {\n        return filteredData.filter(\n          data => data.boardName === boardName\n        );\n      }\n      return DATA.filter(\n        data => data.boardName === boardName\n      );\n    }, [DATA, filteredData, searchKey]\n  )\n\n  const handleSearch = useCallback(\n   (event) => {\n    setSearchKey(event.target.value);\n    setFilteredData(\n      DATA.filter(\n        d => d.taskTitle.toLocaleLowerCase().includes(event.target.value.toLocaleLowerCase())\n      )\n    );\n   }, [DATA]\n  )\n\n  const handleTaskName = useCallback(\n   (event) => {\n     setTaskName(event.target.value)\n     console.log(taskName);\n   }, [taskName]\n  )\n\n  const setPersistData = useCallback(\n    (data) => {\n      localStorage.setItem('todos', JSON.stringify(data));\n      setDATA([\n        ...data\n      ]);\n    },[]\n  )\n\n  const handleAddTask = useCallback(\n   () => {\n     if (taskName) {\n      setPk(pk+1)\n      const newTask = {\n        taskTitle: taskName,\n        boardName: taskType.current.value,\n        pk: pk,\n      };\n\n      setTaskName('');\n      DATA.push(newTask)\n      setPersistData(DATA);\n     }\n   }, [taskName, DATA, pk]\n  )\n\n  const onDeleteCard = useCallback(\n    (cardId) => {\n      setPersistData(DATA.filter(d => d.pk !== cardId))\n    }, [DATA]\n  )\n\n  const onSelectMoveCard = useCallback(\n    (event) => {\n      const { cardPk } = event.target.dataset;\n      const moveToBoard = event.target.value;\n\n      if (moveToBoard) {\n        const index = DATA.findIndex(d => d.pk === parseInt(cardPk))\n        DATA[index].boardName = moveToBoard;\n        setPersistData(DATA);\n      }\n    }, [DATA]\n  )\n\n  return (\n    <div className=\"todo-board\">\n      <div className=\"header\">\n        <h1>Todo Board</h1>\n        <input type=\"text\" id=\"myInput\" values={searchKey} onKeyUp={handleSearch} placeholder=\"Search\"/>\n      </div>\n\n      <div className=\"task-wrapper\">\n        <div className=\"add-task\">\n          <h3>Add task</h3>\n          <input type=\"text\" value={taskName} onChange={handleTaskName} placeholder=\"Task Name\"/>\n          <select name=\"Change Status\" ref={taskType}>\n            {\n              BOARD_TYPES.map(\n                (option, index) => <option key={index} value={option.value}>{option.title}</option>\n              )\n            }\n          </select>\n          <button onClick={handleAddTask}>\n            ADD\n          </button>\n        </div>\n      </div>\n      <div className=\"boards\">\n        <Board\n          title={BOARD_TYPE.TODO}\n          cardsData={getData(BOARD_TYPE.TODO)}\n          onDeleteCard={onDeleteCard}\n          onSelectMoveCard={onSelectMoveCard}\n        />\n        <Board\n          title={BOARD_TYPE.IN_PROGRESS}\n          cardsData={getData(BOARD_TYPE.IN_PROGRESS)}\n          onDeleteCard={onDeleteCard}\n          onSelectMoveCard={onSelectMoveCard}\n        />\n        <Board\n          title={BOARD_TYPE.COMPLETE}\n          cardsData={getData(BOARD_TYPE.COMPLETE)}\n          onDeleteCard={onDeleteCard}\n          onSelectMoveCard={onSelectMoveCard}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default TodoBoard;","import TodoBoard from './containers/todoBoard';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <TodoBoard/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}